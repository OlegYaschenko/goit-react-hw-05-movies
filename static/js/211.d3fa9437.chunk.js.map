{"version":3,"file":"static/js/211.d3fa9437.chunk.js","mappings":"sMAGO,SAASA,EAAT,GAA+B,IAAXC,EAAU,EAAVA,OACnBC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,0BACE,+BACGF,QADH,IACGA,OADH,EACGA,EAAQG,KAAI,YAAoB,IAAjBC,EAAgB,EAAhBA,GAAIC,EAAY,EAAZA,MAClB,OACE,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAMP,GAA1C,SACGI,KAFID,Y,2GCRd,SAASK,IACd,OAA0BC,EAAAA,EAAAA,MAAnBC,GAAP,eAOA,OACE,0BACE,kBAAMC,OAAO,GAAGC,SARC,SAAAC,GACnBA,EAAEC,iBACFJ,EAAgB,CAAEK,MAAOF,EAAEG,OAAOC,OAAOC,QACzCL,EAAEG,OAAOG,SAKP,WACE,kBAAOC,KAAK,OAAOC,KAAK,YACxB,mBAAQD,KAAK,SAAb,yB,uBCWR,EApBe,WACb,OAA4BE,EAAAA,EAAAA,UAAS,MAArC,eAAOvB,EAAP,KAAewB,EAAf,KACA,GAAqBd,EAAAA,EAAAA,MAAhBe,GAAL,eASA,OAPAC,EAAAA,EAAAA,YAAU,WACR,IAAMV,EAAQS,EAAaE,IAAI,SAC3BX,GACFY,EAAAA,GAAcZ,GAAOa,MAAK,SAAAC,GAAC,OAAIN,EAAUM,QAE1C,CAACL,KAGF,iCACE,SAAChB,EAAD,IACCT,IAAU,SAACD,EAAA,EAAD,CAAUC,OAAQA,IACT,KAAb,OAANA,QAAM,IAANA,OAAA,EAAAA,EAAQ+B,UAAgB,iD,0MCnB/BC,IAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,4CAEHC,EAAiB,mCAAG,oGACRF,IAAAA,IAAA,6BAAgCC,IADxB,cACzBE,EADyB,yBAExBA,EAASC,KAAKC,QAAQlC,KAAI,YAC/B,MAAO,CACLC,GAFgD,EAAhBA,GAGhCC,MAHgD,EAAZA,WAFT,2CAAH,qDAUjBiC,EAAW,mCAAG,WAAMnB,GAAN,uFACFa,IAAAA,IAAA,iBAAoBb,GAApB,OAA4Bc,EAA5B,oBADE,cACnBE,EADmB,yBAElBA,EAASC,MAFS,2CAAH,sDAKXG,EAAO,mCAAG,WAAMpB,GAAN,uFACEa,IAAAA,IAAA,iBACXb,EADW,mBACKc,EADL,oBADF,cACfE,EADe,yBAIdA,EAASC,KAAKI,KAAKrC,KAAI,YAC5B,MAAO,CACLmB,KAFqE,EAAxCA,KAG7BmB,UAHqE,EAAlCA,UAInCC,aAJqE,EAAvBA,aAK9CtC,GALqE,EAATA,QAJ3C,2CAAH,sDAcPuC,EAAU,mCAAG,WAAMxB,GAAN,uFACDa,IAAAA,IAAA,iBACXb,EADW,mBACKc,EADL,2BADC,cAClBE,EADkB,yBAIjBA,EAASC,KAAKC,QAAQlC,KAAI,YAC/B,MAAO,CACLyC,OAF0D,EAA1BA,OAGhCC,QAH0D,EAAlBA,QAIxCzC,GAJ0D,EAATA,QAJ7B,2CAAH,sDAaV0C,EAAS,mCAAG,WAAM3B,GAAN,uFACAa,IAAAA,IAAA,wBACJC,EADI,iCAC4Bd,EAD5B,gCADA,cACjBgB,EADiB,yBAIhBA,EAASC,KAAKC,QAAQlC,KAAI,YAC/B,MAAO,CACLC,GAFgD,EAAhBA,GAGhCC,MAHgD,EAAZA,WAJjB,2CAAH","sources":["components/FilmList/FilmList.jsx","components/SearchForm/SearchForm.jsx","components/Movies/Movies.jsx","services/api.js"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nexport function FilmList({ movies }) {\n  const location = useLocation();\n\n  return (\n    <div>\n      <ul>\n        {movies?.map(({ id, title }) => {\n          return (\n            <li key={id}>\n              <Link to={`/movies/${id}`} state={{ from: location }}>\n                {title}\n              </Link>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n}\n\nFilmList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.exact({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import React from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nexport function SearchForm() {\n  let [, setSearchParams] = useSearchParams();\n  const handleSubmit = e => {\n    e.preventDefault();\n    setSearchParams({ query: e.target.search.value });\n    e.target.reset();\n  };\n\n  return (\n    <div>\n      <form action=\"\" onSubmit={handleSubmit}>\n        <input type=\"text\" name=\"search\" />\n        <button type=\"submit\">Search</button>\n      </form>\n    </div>\n  );\n}\n","import { SearchForm } from 'components/SearchForm/SearchForm';\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport * as API from 'services/api';\nimport { FilmList } from 'components/FilmList/FilmList';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState(null);\n  let [searchParams] = useSearchParams();\n\n  useEffect(() => {\n    const query = searchParams.get('query');\n    if (query) {\n      API.getMovies(query).then(r => setMovies(r));\n    }\n  }, [searchParams]);\n\n  return (\n    <>\n      <SearchForm />\n      {movies && <FilmList movies={movies} />}\n      {movies?.length === 0 && <p>Nothing is found</p>}\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '?api_key=82c1ce3c1871a305a32604bda0daa5b4';\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(`/trending/movie/day${API_KEY}`);\n  return response.data.results.map(({ id, title }) => {\n    return {\n      id,\n      title,\n    };\n  });\n};\n\nexport const getOneMovie = async value => {\n  const response = await axios.get(`/movie/${value}${API_KEY}&language=en-US`);\n  return response.data;\n};\n\nexport const getCast = async value => {\n  const response = await axios.get(\n    `/movie/${value}/credits${API_KEY}&language=en-US`\n  );\n  return response.data.cast.map(({ name, character, profile_path, id }) => {\n    return {\n      name,\n      character,\n      profile_path,\n      id,\n    };\n  });\n};\n\nexport const getReviews = async value => {\n  const response = await axios.get(\n    `/movie/${value}/reviews${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results.map(({ author, content, id }) => {\n    return {\n      author,\n      content,\n      id,\n    };\n  });\n};\n\nexport const getMovies = async value => {\n  const response = await axios.get(\n    `/search/movie/${API_KEY}&language=en-US&query=${value}&page=1&include_adult=false`\n  );\n  return response.data.results.map(({ id, title }) => {\n    return {\n      id,\n      title,\n    };\n  });\n};\n"],"names":["FilmList","movies","location","useLocation","map","id","title","to","state","from","SearchForm","useSearchParams","setSearchParams","action","onSubmit","e","preventDefault","query","target","search","value","reset","type","name","useState","setMovies","searchParams","useEffect","get","API","then","r","length","axios","API_KEY","getTrendingMovies","response","data","results","getOneMovie","getCast","cast","character","profile_path","getReviews","author","content","getMovies"],"sourceRoot":""}