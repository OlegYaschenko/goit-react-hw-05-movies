{"version":3,"file":"static/js/946.477e0d14.chunk.js","mappings":"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","sources":["services/api.js","components/MovieDetailsPage/MovieDetailsPage.styled.jsx","views/MovieDetailsPage.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '?api_key=82c1ce3c1871a305a32604bda0daa5b4';\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(`/trending/movie/day${API_KEY}`);\n  return response.data.results.map(({ id, title }) => {\n    return {\n      id,\n      title,\n    };\n  });\n};\n\nexport const getOneMovie = async value => {\n  const response = await axios.get(`/movie/${value}${API_KEY}&language=en-US`);\n  return response.data;\n};\n\nexport const getCast = async value => {\n  const response = await axios.get(\n    `/movie/${value}/credits${API_KEY}&language=en-US`\n  );\n  return response.data.cast.map(({ name, character, profile_path, id }) => {\n    return {\n      name,\n      character,\n      profile_path,\n      id,\n    };\n  });\n};\n\nexport const getReviews = async value => {\n  const response = await axios.get(\n    `/movie/${value}/reviews${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results.map(({ author, content, id }) => {\n    return {\n      author,\n      content,\n      id,\n    };\n  });\n};\n\nexport const getMovies = async value => {\n  const response = await axios.get(\n    `/search/movie${API_KEY}&query=${value}&page=1`\n  );\n  return response.data.results.map(({ id, title }) => {\n    return {\n      id,\n      title,\n    };\n  });\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  padding-left: 50px;\n  padding-right: 50px;\n  padding-top: 10px;\n  padding-bottom: 10px;\n  border-bottom: 1px solid black;\n`;\n\nexport const Button = styled.button`\n  height: 30px;\n  width: 90px;\n  font-size: 16px;\n  font-weight: 700;\n`;\n\nexport const List = styled.ul`\n  list-style: none;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-evenly;\n  height: 100px;\n`;\n\nexport const LinkWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 20px;\n  border-bottom: 1px solid black;\n`;\n","import { useState, useEffect } from 'react';\nimport {\n  useParams,\n  useNavigate,\n  useLocation,\n  Link,\n  Outlet,\n} from 'react-router-dom';\nimport * as API from 'services/api';\n\nimport {\n  Container,\n  Button,\n  List,\n  Item,\n  LinkWrapper,\n} from '../components/MovieDetailsPage/MovieDetailsPage.styled';\n\nconst MovieDetailsPage = () => {\n  const [movie, setMovie] = useState(null);\n  const [buttonLocation, setButtonLocation] = useState(null);\n  let { movieId } = useParams();\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  useEffect(() => {\n    API.getOneMovie(movieId).then(r => setMovie(r));\n  }, [movieId]);\n\n  useEffect(() => {\n    if (location?.state?.from) {\n      setButtonLocation(location.state.from);\n    }\n  }, [location?.state?.from]);\n\n  return (\n    movie && (\n      <>\n        <Button\n          type=\"button\"\n          onClick={() => {\n            navigate(buttonLocation || '/');\n          }}\n        >\n          Go back\n        </Button>\n        <Container>\n          <img\n            src={`https://image.tmdb.org/t/p/w300_and_h450_bestv2${movie.poster_path}`}\n            alt=\"\"\n          />\n          <List>\n            <Item>\n              <h2>{`${movie.title} (${movie.release_date.slice(0, 4)})`}</h2>\n              <p>{`User Score: ${movie.vote_average * 10}%`} </p>\n            </Item>\n            <Item>\n              <h3>Overview</h3>\n              <p>{movie.overview}</p>\n            </Item>\n            <Item>\n              <h3>Genres</h3>\n              <p>{movie.genres.map(genre => genre.name).join(' ')}</p>\n            </Item>\n          </List>\n        </Container>\n        <LinkWrapper>\n          <h3>Additional information</h3>\n          <Link to=\"cast\">Cast</Link>\n          <Link to=\"reviews\">Reviews</Link>\n        </LinkWrapper>\n        <Outlet />\n      </>\n    )\n  );\n};\n\nexport default MovieDetailsPage;\n"],"names":["axios","API_KEY","getTrendingMovies","response","data","results","map","id","title","getOneMovie","value","getCast","cast","name","character","profile_path","getReviews","author","content","getMovies","Container","styled","Button","List","Item","LinkWrapper","useState","movie","setMovie","buttonLocation","setButtonLocation","movieId","useParams","navigate","useNavigate","location","useLocation","useEffect","API","then","r","state","from","type","onClick","src","poster_path","alt","release_date","slice","vote_average","overview","genres","genre","join","to"],"sourceRoot":""}